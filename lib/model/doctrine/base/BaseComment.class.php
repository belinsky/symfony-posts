<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $post_id
 * @property string $author_email
 * @property string $dest_email
 * @property string $comment
 * @property Post $Post
 * 
 * @method integer getPostId()       Returns the current record's "post_id" value
 * @method string  getAuthorEmail()  Returns the current record's "author_email" value
 * @method string  getDestEmail()    Returns the current record's "dest_email" value
 * @method string  getComment()      Returns the current record's "comment" value
 * @method Post    getPost()         Returns the current record's "Post" value
 * @method Comment setPostId()       Sets the current record's "post_id" value
 * @method Comment setAuthorEmail()  Sets the current record's "author_email" value
 * @method Comment setDestEmail()    Sets the current record's "dest_email" value
 * @method Comment setComment()      Sets the current record's "comment" value
 * @method Comment setPost()         Sets the current record's "Post" value
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('post_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('author_email', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('dest_email', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('comment', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Post', array(
             'local' => 'post_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'created',
             ),
             'updated' => 
             array(
              'name' => 'updated',
             ),
             ));
        $this->actAs($timestampable0);
    }
}