<?php

/**
 * BasePost
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $query_token
 * @property string $theme
 * @property string $letter
 * @property integer $raiting
 * @property Query $Query
 * @property Doctrine_Collection $Type
 * @property Doctrine_Collection $Comment
 * 
 * @method string              getQueryToken()  Returns the current record's "query_token" value
 * @method string              getTheme()       Returns the current record's "theme" value
 * @method string              getLetter()      Returns the current record's "letter" value
 * @method integer             getRaiting()     Returns the current record's "raiting" value
 * @method Query               getQuery()       Returns the current record's "Query" value
 * @method Doctrine_Collection getType()        Returns the current record's "Type" collection
 * @method Doctrine_Collection getComment()     Returns the current record's "Comment" collection
 * @method Post                setQueryToken()  Sets the current record's "query_token" value
 * @method Post                setTheme()       Sets the current record's "theme" value
 * @method Post                setLetter()      Sets the current record's "letter" value
 * @method Post                setRaiting()     Sets the current record's "raiting" value
 * @method Post                setQuery()       Sets the current record's "Query" value
 * @method Post                setType()        Sets the current record's "Type" collection
 * @method Post                setComment()     Sets the current record's "Comment" collection
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePost extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('post');
        $this->hasColumn('query_token', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('theme', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('letter', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('raiting', 'integer', 11, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 11,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Query', array(
             'local' => 'query_token',
             'foreign' => 'token',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Type', array(
             'refClass' => 'PostType',
             'local' => 'post_id',
             'foreign' => 'type_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Comment', array(
             'local' => 'id',
             'foreign' => 'post_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'created',
             ),
             'updated' => 
             array(
              'name' => 'updated',
             ),
             ));
        $this->actAs($timestampable0);
    }
}